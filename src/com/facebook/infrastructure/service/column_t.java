/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.facebook.infrastructure.service;

import java.util.ArrayList;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.HashSet;
import com.facebook.thrift.*;

import com.facebook.thrift.protocol.*;
import com.facebook.thrift.transport.*;

public class column_t implements TBase, java.io.Serializable {
  public String columnName;
  public String value;
  public int timestamp;

  public final Isset __isset = new Isset();
  public static final class Isset {
    public boolean columnName = false;
    public boolean value = false;
    public boolean timestamp = false;
  }

  public column_t() {
  }

  public column_t(
    String columnName,
    String value,
    int timestamp)
  {
    this();
    this.columnName = columnName;
    this.__isset.columnName = true;
    this.value = value;
    this.__isset.value = true;
    this.timestamp = timestamp;
    this.__isset.timestamp = true;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id)
      {
        case 1:
          if (field.type == TType.STRING) {
            this.columnName = iprot.readString();
            this.__isset.columnName = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2:
          if (field.type == TType.STRING) {
            this.value = iprot.readString();
            this.__isset.value = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3:
          if (field.type == TType.I32) {
            this.timestamp = iprot.readI32();
            this.__isset.timestamp = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
  }

  public void write(TProtocol oprot) throws TException {
    TStruct struct = new TStruct("column_t");
    oprot.writeStructBegin(struct);
    TField field = new TField();
    if (this.columnName != null) {
      field.name = "columnName";
      field.type = TType.STRING;
      field.id = 1;
      oprot.writeFieldBegin(field);
      oprot.writeString(this.columnName);
      oprot.writeFieldEnd();
    }
    if (this.value != null) {
      field.name = "value";
      field.type = TType.STRING;
      field.id = 2;
      oprot.writeFieldBegin(field);
      oprot.writeString(this.value);
      oprot.writeFieldEnd();
    }
    field.name = "timestamp";
    field.type = TType.I32;
    field.id = 3;
    oprot.writeFieldBegin(field);
    oprot.writeI32(this.timestamp);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuilder sb = new StringBuilder("column_t(");
    sb.append("columnName:");
    sb.append(this.columnName);
    sb.append(",value:");
    sb.append(this.value);
    sb.append(",timestamp:");
    sb.append(this.timestamp);
    sb.append(")");
    return sb.toString();
  }

}

