/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Thrift;
using Thrift.Protocol;
using Thrift.Transport;
public class column_t 
{
  public string columnName;
  public string value;
  public int timestamp;

  public Isset __isset;
  public struct Isset {
    public bool columnName;
    public bool value;
    public bool timestamp;
  }

  public column_t() {
  }

  public void Read (TProtocol iprot)
  {
    TField field;
    TStruct struc = iprot.ReadStructBegin();
    while (true)
    {
      field = iprot.ReadFieldBegin();
      if (field.Type == TType.Stop) { 
        break;
      }
      switch (field.ID)
      {
        case 1:
          if (field.Type == TType.String) {
            this.columnName = iprot.ReadString();
            this.__isset.columnName = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 2:
          if (field.Type == TType.String) {
            this.value = iprot.ReadString();
            this.__isset.value = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 3:
          if (field.Type == TType.I32) {
            this.timestamp = iprot.ReadI32();
            this.__isset.timestamp = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        default: 
          TProtocolUtil.Skip(iprot, field.Type);
          break;
      }
      iprot.ReadFieldEnd();
    }
    iprot.ReadStructEnd();
  }

  public void Write(TProtocol oprot) {
    TStruct struc = new TStruct("column_t");
    oprot.WriteStructBegin(struc);
    TField field = new TField();
    if (this.columnName != null) {
      field.Name = "columnName";
      field.Type = TType.String;
      field.ID = 1;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(this.columnName);
      oprot.WriteFieldEnd();
    }
    if (this.value != null) {
      field.Name = "value";
      field.Type = TType.String;
      field.ID = 2;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(this.value);
      oprot.WriteFieldEnd();
    }
    field.Name = "timestamp";
    field.Type = TType.I32;
    field.ID = 3;
    oprot.WriteFieldBegin(field);
    oprot.WriteI32(this.timestamp);
    oprot.WriteFieldEnd();
    oprot.WriteFieldStop();
    oprot.WriteStructEnd();
  }

  public override string ToString() {
    StringBuilder sb = new StringBuilder("column_t(");
    sb.Append("columnName: ");
    sb.Append(this.columnName);
    sb.Append(",value: ");
    sb.Append(this.value);
    sb.Append(",timestamp: ");
    sb.Append(this.timestamp);
    sb.Append(")");
    return sb.ToString();
  }

}

