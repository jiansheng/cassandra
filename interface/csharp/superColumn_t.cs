/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Thrift;
using Thrift.Protocol;
using Thrift.Transport;
public class superColumn_t 
{
  public string name;
  public List<column_t> columns;

  public Isset __isset;
  public struct Isset {
    public bool name;
    public bool columns;
  }

  public superColumn_t() {
  }

  public void Read (TProtocol iprot)
  {
    TField field;
    TStruct struc = iprot.ReadStructBegin();
    while (true)
    {
      field = iprot.ReadFieldBegin();
      if (field.Type == TType.Stop) { 
        break;
      }
      switch (field.ID)
      {
        case 1:
          if (field.Type == TType.String) {
            this.name = iprot.ReadString();
            this.__isset.name = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        case 2:
          if (field.Type == TType.List) {
            {
              this.columns = new List<column_t>();
              TList _list9 = iprot.ReadListBegin();
              for( int _i10 = 0; _i10 < _list9.Count; ++_i10)
              {
                column_t _elem11 = new column_t();
                _elem11 = new column_t();
                _elem11.Read(iprot);
                this.columns.Add(_elem11);
              }
              iprot.ReadListEnd();
            }
            this.__isset.columns = true;
          } else { 
            TProtocolUtil.Skip(iprot, field.Type);
          }
          break;
        default: 
          TProtocolUtil.Skip(iprot, field.Type);
          break;
      }
      iprot.ReadFieldEnd();
    }
    iprot.ReadStructEnd();
  }

  public void Write(TProtocol oprot) {
    TStruct struc = new TStruct("superColumn_t");
    oprot.WriteStructBegin(struc);
    TField field = new TField();
    if (this.name != null) {
      field.Name = "name";
      field.Type = TType.String;
      field.ID = 1;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(this.name);
      oprot.WriteFieldEnd();
    }
    if (this.columns != null) {
      field.Name = "columns";
      field.Type = TType.List;
      field.ID = 2;
      oprot.WriteFieldBegin(field);
      {
        oprot.WriteListBegin(new TList(TType.Struct, this.columns.Count));
        foreach (column_t _iter12 in this.columns)
        {
          _iter12.Write(oprot);
          oprot.WriteListEnd();
        }
      }
      oprot.WriteFieldEnd();
    }
    oprot.WriteFieldStop();
    oprot.WriteStructEnd();
  }

  public override string ToString() {
    StringBuilder sb = new StringBuilder("superColumn_t(");
    sb.Append("name: ");
    sb.Append(this.name);
    sb.Append(",columns: ");
    sb.Append(this.columns);
    sb.Append(")");
    return sb.ToString();
  }

}

