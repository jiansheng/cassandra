/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#import <Cocoa/Cocoa.h>

#import <TProtocol.h>
#import <TApplicationException.h>
#import <TProtocolUtil.h>

#import "fb303.h"

typedef NSDictionary * column_family_map;

typedef NSDictionary * superColumn_family_map;

@interface column_t : NSObject {
  NSString * __columnName;
  NSString * __value;
  int32_t __timestamp;

  BOOL __columnName_isset;
  BOOL __value_isset;
  BOOL __timestamp_isset;
}

- (id) initWithColumnName: (NSString *) columnName value: (NSString *) value timestamp: (int32_t) timestamp;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) columnName;
- (void) setColumnName: (NSString *) columnName;
- (BOOL) columnNameIsSet;

- (NSString *) value;
- (void) setValue: (NSString *) value;
- (BOOL) valueIsSet;

- (int32_t) timestamp;
- (void) setTimestamp: (int32_t) timestamp;
- (BOOL) timestampIsSet;

@end

@interface batch_mutation_t : NSObject {
  NSString * __table;
  NSString * __key;
  column_family_map __cfmap;

  BOOL __table_isset;
  BOOL __key_isset;
  BOOL __cfmap_isset;
}

- (id) initWithTable: (NSString *) table key: (NSString *) key cfmap: (column_family_map) cfmap;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) table;
- (void) setTable: (NSString *) table;
- (BOOL) tableIsSet;

- (NSString *) key;
- (void) setKey: (NSString *) key;
- (BOOL) keyIsSet;

- (column_family_map) cfmap;
- (void) setCfmap: (column_family_map) cfmap;
- (BOOL) cfmapIsSet;

@end

@interface superColumn_t : NSObject {
  NSString * __name;
  NSArray * __columns;

  BOOL __name_isset;
  BOOL __columns_isset;
}

- (id) initWithName: (NSString *) name columns: (NSArray *) columns;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) name;
- (void) setName: (NSString *) name;
- (BOOL) nameIsSet;

- (NSArray *) columns;
- (void) setColumns: (NSArray *) columns;
- (BOOL) columnsIsSet;

@end

@interface batch_mutation_super_t : NSObject {
  NSString * __table;
  NSString * __key;
  superColumn_family_map __cfmap;

  BOOL __table_isset;
  BOOL __key_isset;
  BOOL __cfmap_isset;
}

- (id) initWithTable: (NSString *) table key: (NSString *) key cfmap: (superColumn_family_map) cfmap;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (NSString *) table;
- (void) setTable: (NSString *) table;
- (BOOL) tableIsSet;

- (NSString *) key;
- (void) setKey: (NSString *) key;
- (BOOL) keyIsSet;

- (superColumn_family_map) cfmap;
- (void) setCfmap: (superColumn_family_map) cfmap;
- (BOOL) cfmapIsSet;

@end

@protocol Cassandra <NSObject>
- (NSArray *) get_slice: (NSString *) tablename : (NSString *) key : (NSString *) columnFamily_column : (int32_t) start : (int32_t) count;  // throws TException
- (column_t *) get_column: (NSString *) tablename : (NSString *) key : (NSString *) columnFamily_column;  // throws TException
- (int32_t) get_column_count: (NSString *) tablename : (NSString *) key : (NSString *) columnFamily_column;  // throws TException
- (void) insert: (NSString *) tablename : (NSString *) key : (NSString *) columnFamily_column : (NSString *) cellData : (int32_t) timestamp;  // throws TException
- (void) batch_insert: (batch_mutation_t *) batchMutation;  // throws TException
- (BOOL) batch_insert_blocking: (batch_mutation_t *) batchMutation;  // throws TException
- (void) remove: (NSString *) tablename : (NSString *) key : (NSString *) columnFamily_column;  // throws TException
- (NSArray *) get_slice_super: (NSString *) tablename : (NSString *) key : (NSString *) columnFamily_superColumnName : (int32_t) start : (int32_t) count;  // throws TException
- (superColumn_t *) get_superColumn: (NSString *) tablename : (NSString *) key : (NSString *) columnFamily;  // throws TException
- (void) batch_insert_superColumn: (batch_mutation_super_t *) batchMutationSuper;  // throws TException
- (BOOL) batch_insert_superColumn_blocking: (batch_mutation_super_t *) batchMutationSuper;  // throws TException
@end

@interface CassandraClient : NSObject <Cassandra> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface cassandraConstants {
}
@end
