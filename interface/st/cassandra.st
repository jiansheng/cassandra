'Autogenerated by Thrift

DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
'!

Object subclass: #Cassandra
  instanceVariableNames: ''
  classVariableNames: ''
  poolDictionaries: ''
  category: 'Generated-Cassandra'!

Cassandra class
	instanceVariableNames: 'constants enums'!

!Cassandra class methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
enums: anObject
    enums := anObject! !

!Cassandra class methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
enums
    ^ enums! !

!Cassandra class methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
constants: anObject
    constants := anObject! !

!Cassandra class methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
constants
    ^ constants! !

Cassandra enums: Dictionary new!
Cassandra constants: Dictionary new!

Object subclass: #Column_t
	instanceVariableNames: 'columnName value timestamp'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Generated-Cassandra'!

!Column_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
columnName: aString
    columnName := aString! !

!Column_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
columnName
    ^ columnName! !

!Column_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
value: aString
    value := aString! !

!Column_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
value
    ^ value! !

!Column_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
timestamp: anI32
    timestamp := anI32! !

!Column_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
timestamp
    ^ timestamp! !


Object subclass: #Batch_mutation_t
	instanceVariableNames: 'table key cfmap'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Generated-Cassandra'!

!Batch_mutation_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
table: aString
    table := aString! !

!Batch_mutation_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
table
    ^ table! !

!Batch_mutation_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
key: aString
    key := aString! !

!Batch_mutation_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
key
    ^ key! !

!Batch_mutation_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
cfmap: aColumn_family_map
    cfmap := aColumn_family_map! !

!Batch_mutation_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
cfmap
    ^ cfmap! !


Object subclass: #SuperColumn_t
	instanceVariableNames: 'name columns'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Generated-Cassandra'!

!SuperColumn_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
name: aString
    name := aString! !

!SuperColumn_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
name
    ^ name! !

!SuperColumn_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
columns: a
    columns := a! !

!SuperColumn_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
columns
    ^ columns! !


Object subclass: #Batch_mutation_super_t
	instanceVariableNames: 'table key cfmap'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Generated-Cassandra'!

!Batch_mutation_super_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
table: aString
    table := aString! !

!Batch_mutation_super_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
table
    ^ table! !

!Batch_mutation_super_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
key: aString
    key := aString! !

!Batch_mutation_super_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
key
    ^ key! !

!Batch_mutation_super_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
cfmap: aSuperColumn_family_map
    cfmap := aSuperColumn_family_map! !

!Batch_mutation_super_t methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
cfmap
    ^ cfmap! !


FacebookServiceClient subclass: #CassandraClient
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Generated-Cassandra'!

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
get_sliceTablename: tablename key: key columnFamily_column: columnFamily_column start: start count: count
    "tablename: string, key: string, columnFamily_column: string, start: i32, count: i32"
    self sendGet_sliceTablename: tablename key: key columnFamily_column: columnFamily_column start: start count: count.
    ^ self recvGet_slice success 
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendGet_sliceTablename: tablename key: key columnFamily_column: columnFamily_column start: start count: count
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'get_slice'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Get_slice_args').
    oprot writeFieldBegin: (TField new name: 'tablename'; type: TType string; id: -1).
    iprot writeString: tablename.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: -2).
    iprot writeString: key.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'columnFamily_column'; type: TType string; id: -3).
    iprot writeString: columnFamily_column.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'start'; type: TType i32; id: -4).
    iprot writeI32: start asInteger.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'count'; type: TType i32; id: -5).
    iprot writeI32: count asInteger.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
recvGet_slice
    | f msg res | 
    msg := oprot readMessageBegin.
    self validateRemoteMessage: msg.
    res := [|temp1 temp0|
      temp0 := TResult new.
      iprot readStructBegin.
      [temp1 := iprot readFieldBegin.
      temp1 type = TType stop] whileFalse: [|temp2|
        temp1 id = 0 ifTrue: [
          temp2 := true.
          temp0 success: [|temp3 temp4| temp3 := iprot readListBegin.
            temp4 := OrderedCollection new.
            temp3 size timesRepeat: [
              temp4 add: [|temp6 temp5|
                temp5 := Column_t new.
                iprot readStructBegin.
                [temp6 := iprot readFieldBegin.
                temp6 type = TType stop] whileFalse: [|temp7|
                  temp6 id = 1 ifTrue: [
                    temp7 := true.
                    temp5 columnName: iprot readString].
                  temp6 id = 2 ifTrue: [
                    temp7 := true.
                    temp5 value: iprot readString].
                  temp6 id = 3 ifTrue: [
                    temp7 := true.
                    temp5 timestamp: iprot readI32].
                  temp7 ifNil: [iprot skip: temp6 type]].
                oprot readStructEnd.
                temp5] value].
            iprot readListEnd.
            temp4] value].
        temp2 ifNil: [iprot skip: temp1 type]].
      oprot readStructEnd.
      temp0] value.
    oprot readMessageEnd.
    oprot transport flush.
    res exception ifNotNil: [res exception signal].
    ^ res! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
get_columnTablename: tablename key: key columnFamily_column: columnFamily_column
    "tablename: string, key: string, columnFamily_column: string"
    self sendGet_columnTablename: tablename key: key columnFamily_column: columnFamily_column.
    ^ self recvGet_column success 
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendGet_columnTablename: tablename key: key columnFamily_column: columnFamily_column
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'get_column'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Get_column_args').
    oprot writeFieldBegin: (TField new name: 'tablename'; type: TType string; id: -1).
    iprot writeString: tablename.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: -2).
    iprot writeString: key.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'columnFamily_column'; type: TType string; id: -3).
    iprot writeString: columnFamily_column.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
recvGet_column
    | f msg res | 
    msg := oprot readMessageBegin.
    self validateRemoteMessage: msg.
    res := [|temp9 temp8|
      temp8 := TResult new.
      iprot readStructBegin.
      [temp9 := iprot readFieldBegin.
      temp9 type = TType stop] whileFalse: [|temp10|
        temp9 id = 0 ifTrue: [
          temp10 := true.
          temp8 success: [|temp12 temp11|
            temp11 := Column_t new.
            iprot readStructBegin.
            [temp12 := iprot readFieldBegin.
            temp12 type = TType stop] whileFalse: [|temp13|
              temp12 id = 1 ifTrue: [
                temp13 := true.
                temp11 columnName: iprot readString].
              temp12 id = 2 ifTrue: [
                temp13 := true.
                temp11 value: iprot readString].
              temp12 id = 3 ifTrue: [
                temp13 := true.
                temp11 timestamp: iprot readI32].
              temp13 ifNil: [iprot skip: temp12 type]].
            oprot readStructEnd.
            temp11] value].
        temp10 ifNil: [iprot skip: temp9 type]].
      oprot readStructEnd.
      temp8] value.
    oprot readMessageEnd.
    oprot transport flush.
    res exception ifNotNil: [res exception signal].
    ^ res! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
get_column_countTablename: tablename key: key columnFamily_column: columnFamily_column
    "tablename: string, key: string, columnFamily_column: string"
    self sendGet_column_countTablename: tablename key: key columnFamily_column: columnFamily_column.
    ^ self recvGet_column_count success 
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendGet_column_countTablename: tablename key: key columnFamily_column: columnFamily_column
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'get_column_count'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Get_column_count_args').
    oprot writeFieldBegin: (TField new name: 'tablename'; type: TType string; id: -1).
    iprot writeString: tablename.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: -2).
    iprot writeString: key.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'columnFamily_column'; type: TType string; id: -3).
    iprot writeString: columnFamily_column.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
recvGet_column_count
    | f msg res | 
    msg := oprot readMessageBegin.
    self validateRemoteMessage: msg.
    res := [|temp15 temp14|
      temp14 := TResult new.
      iprot readStructBegin.
      [temp15 := iprot readFieldBegin.
      temp15 type = TType stop] whileFalse: [|temp16|
        temp15 id = 0 ifTrue: [
          temp16 := true.
          temp14 success: iprot readI32].
        temp16 ifNil: [iprot skip: temp15 type]].
      oprot readStructEnd.
      temp14] value.
    oprot readMessageEnd.
    oprot transport flush.
    res exception ifNotNil: [res exception signal].
    ^ res! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
insertTablename: tablename key: key columnFamily_column: columnFamily_column cellData: cellData timestamp: timestamp
    "tablename: string, key: string, columnFamily_column: string, cellData: string, timestamp: i32"
    self sendInsertTablename: tablename key: key columnFamily_column: columnFamily_column cellData: cellData timestamp: timestamp.
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendInsertTablename: tablename key: key columnFamily_column: columnFamily_column cellData: cellData timestamp: timestamp
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'insert'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Insert_args').
    oprot writeFieldBegin: (TField new name: 'tablename'; type: TType string; id: -1).
    iprot writeString: tablename.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: -2).
    iprot writeString: key.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'columnFamily_column'; type: TType string; id: -3).
    iprot writeString: columnFamily_column.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'cellData'; type: TType string; id: -4).
    iprot writeString: cellData.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'timestamp'; type: TType i32; id: -5).
    iprot writeI32: timestamp asInteger.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
batch_insertBatchMutation: batchMutation
    "batchMutation: Batch_mutation_t"
    self sendBatch_insertBatchMutation: batchMutation.
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendBatch_insertBatchMutation: batchMutation
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'batch_insert'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Batch_insert_args').
    oprot writeFieldBegin: (TField new name: 'batchMutation'; type: TType struct; id: -1).
    [oprot writeStructBegin: (TStruct new name: 'batch_mutation_t').
      oprot writeFieldBegin: (TField new name: 'table'; type: TType string; id: 1).
      iprot writeString: batchMutation table.
      oprot writeFieldEnd.
      oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: 2).
      iprot writeString: batchMutation key.
      oprot writeFieldEnd.
      oprot writeFieldBegin: (TField new name: 'cfmap'; type: TType map; id: 3).
      [oprot writeMapBegin: (TMap new keyType: TType string; valueType: TType list; size: batchMutation cfmap size).
        batchMutation cfmap keysAndValuesDo: [:temp17 :temp18 |
          iprot writeString: temp17.
          [oprot writeListBegin: (TList new elemType: TType struct; size: temp18 size).
            temp18 do: [:temp19|
              [oprot writeStructBegin: (TStruct new name: 'column_t').
                oprot writeFieldBegin: (TField new name: 'columnName'; type: TType string; id: 1).
                iprot writeString: temp19 columnName.
                oprot writeFieldEnd.
                oprot writeFieldBegin: (TField new name: 'value'; type: TType string; id: 2).
                iprot writeString: temp19 value.
                oprot writeFieldEnd.
                oprot writeFieldBegin: (TField new name: 'timestamp'; type: TType i32; id: 3).
                iprot writeI32: temp19 timestamp asInteger.
                oprot writeFieldEnd.
                oprot writeFieldStop; writeStructEnd] value
].
            oprot writeListEnd] value].
        oprot writeMapEnd] value.
      oprot writeFieldEnd.
      oprot writeFieldStop; writeStructEnd] value.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
batch_insert_blockingBatchMutation: batchMutation
    "batchMutation: Batch_mutation_t"
    self sendBatch_insert_blockingBatchMutation: batchMutation.
    ^ self recvBatch_insert_blocking success 
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendBatch_insert_blockingBatchMutation: batchMutation
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'batch_insert_blocking'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Batch_insert_blocking_args').
    oprot writeFieldBegin: (TField new name: 'batchMutation'; type: TType struct; id: -1).
    [oprot writeStructBegin: (TStruct new name: 'batch_mutation_t').
      oprot writeFieldBegin: (TField new name: 'table'; type: TType string; id: 1).
      iprot writeString: batchMutation table.
      oprot writeFieldEnd.
      oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: 2).
      iprot writeString: batchMutation key.
      oprot writeFieldEnd.
      oprot writeFieldBegin: (TField new name: 'cfmap'; type: TType map; id: 3).
      [oprot writeMapBegin: (TMap new keyType: TType string; valueType: TType list; size: batchMutation cfmap size).
        batchMutation cfmap keysAndValuesDo: [:temp20 :temp21 |
          iprot writeString: temp20.
          [oprot writeListBegin: (TList new elemType: TType struct; size: temp21 size).
            temp21 do: [:temp22|
              [oprot writeStructBegin: (TStruct new name: 'column_t').
                oprot writeFieldBegin: (TField new name: 'columnName'; type: TType string; id: 1).
                iprot writeString: temp22 columnName.
                oprot writeFieldEnd.
                oprot writeFieldBegin: (TField new name: 'value'; type: TType string; id: 2).
                iprot writeString: temp22 value.
                oprot writeFieldEnd.
                oprot writeFieldBegin: (TField new name: 'timestamp'; type: TType i32; id: 3).
                iprot writeI32: temp22 timestamp asInteger.
                oprot writeFieldEnd.
                oprot writeFieldStop; writeStructEnd] value
].
            oprot writeListEnd] value].
        oprot writeMapEnd] value.
      oprot writeFieldEnd.
      oprot writeFieldStop; writeStructEnd] value.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
recvBatch_insert_blocking
    | f msg res | 
    msg := oprot readMessageBegin.
    self validateRemoteMessage: msg.
    res := [|temp24 temp23|
      temp23 := TResult new.
      iprot readStructBegin.
      [temp24 := iprot readFieldBegin.
      temp24 type = TType stop] whileFalse: [|temp25|
        temp24 id = 0 ifTrue: [
          temp25 := true.
          temp23 success: iprot readBool].
        temp25 ifNil: [iprot skip: temp24 type]].
      oprot readStructEnd.
      temp23] value.
    oprot readMessageEnd.
    oprot transport flush.
    res exception ifNotNil: [res exception signal].
    ^ res! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
removeTablename: tablename key: key columnFamily_column: columnFamily_column
    "tablename: string, key: string, columnFamily_column: string"
    self sendRemoveTablename: tablename key: key columnFamily_column: columnFamily_column.
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendRemoveTablename: tablename key: key columnFamily_column: columnFamily_column
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'remove'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Remove_args').
    oprot writeFieldBegin: (TField new name: 'tablename'; type: TType string; id: -1).
    iprot writeString: tablename.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: -2).
    iprot writeString: key.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'columnFamily_column'; type: TType string; id: -3).
    iprot writeString: columnFamily_column.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
get_slice_superTablename: tablename key: key columnFamily_superColumnName: columnFamily_superColumnName start: start count: count
    "tablename: string, key: string, columnFamily_superColumnName: string, start: i32, count: i32"
    self sendGet_slice_superTablename: tablename key: key columnFamily_superColumnName: columnFamily_superColumnName start: start count: count.
    ^ self recvGet_slice_super success 
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendGet_slice_superTablename: tablename key: key columnFamily_superColumnName: columnFamily_superColumnName start: start count: count
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'get_slice_super'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Get_slice_super_args').
    oprot writeFieldBegin: (TField new name: 'tablename'; type: TType string; id: -1).
    iprot writeString: tablename.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: -2).
    iprot writeString: key.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'columnFamily_superColumnName'; type: TType string; id: -3).
    iprot writeString: columnFamily_superColumnName.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'start'; type: TType i32; id: -4).
    iprot writeI32: start asInteger.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'count'; type: TType i32; id: -5).
    iprot writeI32: count asInteger.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
recvGet_slice_super
    | f msg res | 
    msg := oprot readMessageBegin.
    self validateRemoteMessage: msg.
    res := [|temp27 temp26|
      temp26 := TResult new.
      iprot readStructBegin.
      [temp27 := iprot readFieldBegin.
      temp27 type = TType stop] whileFalse: [|temp28|
        temp27 id = 0 ifTrue: [
          temp28 := true.
          temp26 success: [|temp29 temp30| temp29 := iprot readListBegin.
            temp30 := OrderedCollection new.
            temp29 size timesRepeat: [
              temp30 add: [|temp32 temp31|
                temp31 := SuperColumn_t new.
                iprot readStructBegin.
                [temp32 := iprot readFieldBegin.
                temp32 type = TType stop] whileFalse: [|temp33|
                  temp32 id = 1 ifTrue: [
                    temp33 := true.
                    temp31 name: iprot readString].
                  temp32 id = 2 ifTrue: [
                    temp33 := true.
                    temp31 columns: [|temp34 temp35| temp34 := iprot readListBegin.
                      temp35 := OrderedCollection new.
                      temp34 size timesRepeat: [
                        temp35 add: [|temp37 temp36|
                          temp36 := Column_t new.
                          iprot readStructBegin.
                          [temp37 := iprot readFieldBegin.
                          temp37 type = TType stop] whileFalse: [|temp38|
                            temp37 id = 1 ifTrue: [
                              temp38 := true.
                              temp36 columnName: iprot readString].
                            temp37 id = 2 ifTrue: [
                              temp38 := true.
                              temp36 value: iprot readString].
                            temp37 id = 3 ifTrue: [
                              temp38 := true.
                              temp36 timestamp: iprot readI32].
                            temp38 ifNil: [iprot skip: temp37 type]].
                          oprot readStructEnd.
                          temp36] value].
                      iprot readListEnd.
                      temp35] value].
                  temp33 ifNil: [iprot skip: temp32 type]].
                oprot readStructEnd.
                temp31] value].
            iprot readListEnd.
            temp30] value].
        temp28 ifNil: [iprot skip: temp27 type]].
      oprot readStructEnd.
      temp26] value.
    oprot readMessageEnd.
    oprot transport flush.
    res exception ifNotNil: [res exception signal].
    ^ res! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
get_superColumnTablename: tablename key: key columnFamily: columnFamily
    "tablename: string, key: string, columnFamily: string"
    self sendGet_superColumnTablename: tablename key: key columnFamily: columnFamily.
    ^ self recvGet_superColumn success 
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendGet_superColumnTablename: tablename key: key columnFamily: columnFamily
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'get_superColumn'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Get_superColumn_args').
    oprot writeFieldBegin: (TField new name: 'tablename'; type: TType string; id: -1).
    iprot writeString: tablename.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: -2).
    iprot writeString: key.
    oprot writeFieldEnd.
    oprot writeFieldBegin: (TField new name: 'columnFamily'; type: TType string; id: -3).
    iprot writeString: columnFamily.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
recvGet_superColumn
    | f msg res | 
    msg := oprot readMessageBegin.
    self validateRemoteMessage: msg.
    res := [|temp40 temp39|
      temp39 := TResult new.
      iprot readStructBegin.
      [temp40 := iprot readFieldBegin.
      temp40 type = TType stop] whileFalse: [|temp41|
        temp40 id = 0 ifTrue: [
          temp41 := true.
          temp39 success: [|temp43 temp42|
            temp42 := SuperColumn_t new.
            iprot readStructBegin.
            [temp43 := iprot readFieldBegin.
            temp43 type = TType stop] whileFalse: [|temp44|
              temp43 id = 1 ifTrue: [
                temp44 := true.
                temp42 name: iprot readString].
              temp43 id = 2 ifTrue: [
                temp44 := true.
                temp42 columns: [|temp45 temp46| temp45 := iprot readListBegin.
                  temp46 := OrderedCollection new.
                  temp45 size timesRepeat: [
                    temp46 add: [|temp48 temp47|
                      temp47 := Column_t new.
                      iprot readStructBegin.
                      [temp48 := iprot readFieldBegin.
                      temp48 type = TType stop] whileFalse: [|temp49|
                        temp48 id = 1 ifTrue: [
                          temp49 := true.
                          temp47 columnName: iprot readString].
                        temp48 id = 2 ifTrue: [
                          temp49 := true.
                          temp47 value: iprot readString].
                        temp48 id = 3 ifTrue: [
                          temp49 := true.
                          temp47 timestamp: iprot readI32].
                        temp49 ifNil: [iprot skip: temp48 type]].
                      oprot readStructEnd.
                      temp47] value].
                  iprot readListEnd.
                  temp46] value].
              temp44 ifNil: [iprot skip: temp43 type]].
            oprot readStructEnd.
            temp42] value].
        temp41 ifNil: [iprot skip: temp40 type]].
      oprot readStructEnd.
      temp39] value.
    oprot readMessageEnd.
    oprot transport flush.
    res exception ifNotNil: [res exception signal].
    ^ res! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
batch_insert_superColumnBatchMutationSuper: batchMutationSuper
    "batchMutationSuper: Batch_mutation_super_t"
    self sendBatch_insert_superColumnBatchMutationSuper: batchMutationSuper.
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendBatch_insert_superColumnBatchMutationSuper: batchMutationSuper
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'batch_insert_superColumn'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Batch_insert_superColumn_args').
    oprot writeFieldBegin: (TField new name: 'batchMutationSuper'; type: TType struct; id: -1).
    [oprot writeStructBegin: (TStruct new name: 'batch_mutation_super_t').
      oprot writeFieldBegin: (TField new name: 'table'; type: TType string; id: 1).
      iprot writeString: batchMutationSuper table.
      oprot writeFieldEnd.
      oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: 2).
      iprot writeString: batchMutationSuper key.
      oprot writeFieldEnd.
      oprot writeFieldBegin: (TField new name: 'cfmap'; type: TType map; id: 3).
      [oprot writeMapBegin: (TMap new keyType: TType string; valueType: TType list; size: batchMutationSuper cfmap size).
        batchMutationSuper cfmap keysAndValuesDo: [:temp50 :temp51 |
          iprot writeString: temp50.
          [oprot writeListBegin: (TList new elemType: TType struct; size: temp51 size).
            temp51 do: [:temp52|
              [oprot writeStructBegin: (TStruct new name: 'superColumn_t').
                oprot writeFieldBegin: (TField new name: 'name'; type: TType string; id: 1).
                iprot writeString: temp52 name.
                oprot writeFieldEnd.
                oprot writeFieldBegin: (TField new name: 'columns'; type: TType list; id: 2).
                [oprot writeListBegin: (TList new elemType: TType struct; size: temp52 columns size).
                  temp52 columns do: [:temp53|
                    [oprot writeStructBegin: (TStruct new name: 'column_t').
                      oprot writeFieldBegin: (TField new name: 'columnName'; type: TType string; id: 1).
                      iprot writeString: temp53 columnName.
                      oprot writeFieldEnd.
                      oprot writeFieldBegin: (TField new name: 'value'; type: TType string; id: 2).
                      iprot writeString: temp53 value.
                      oprot writeFieldEnd.
                      oprot writeFieldBegin: (TField new name: 'timestamp'; type: TType i32; id: 3).
                      iprot writeI32: temp53 timestamp asInteger.
                      oprot writeFieldEnd.
                      oprot writeFieldStop; writeStructEnd] value
].
                  oprot writeListEnd] value.
                oprot writeFieldEnd.
                oprot writeFieldStop; writeStructEnd] value
].
            oprot writeListEnd] value].
        oprot writeMapEnd] value.
      oprot writeFieldEnd.
      oprot writeFieldStop; writeStructEnd] value.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
batch_insert_superColumn_blockingBatchMutationSuper: batchMutationSuper
    "batchMutationSuper: Batch_mutation_super_t"
    self sendBatch_insert_superColumn_blockingBatchMutationSuper: batchMutationSuper.
    ^ self recvBatch_insert_superColumn_blocking success 
! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
sendBatch_insert_superColumn_blockingBatchMutationSuper: batchMutationSuper
    oprot writeMessageBegin:
      (TCallMessage new
        name: 'batch_insert_superColumn_blocking'; 
        seqid: self nextSeqid).
    oprot writeStructBegin: (TStruct new name: 'Batch_insert_superColumn_blocking_args').
    oprot writeFieldBegin: (TField new name: 'batchMutationSuper'; type: TType struct; id: -1).
    [oprot writeStructBegin: (TStruct new name: 'batch_mutation_super_t').
      oprot writeFieldBegin: (TField new name: 'table'; type: TType string; id: 1).
      iprot writeString: batchMutationSuper table.
      oprot writeFieldEnd.
      oprot writeFieldBegin: (TField new name: 'key'; type: TType string; id: 2).
      iprot writeString: batchMutationSuper key.
      oprot writeFieldEnd.
      oprot writeFieldBegin: (TField new name: 'cfmap'; type: TType map; id: 3).
      [oprot writeMapBegin: (TMap new keyType: TType string; valueType: TType list; size: batchMutationSuper cfmap size).
        batchMutationSuper cfmap keysAndValuesDo: [:temp54 :temp55 |
          iprot writeString: temp54.
          [oprot writeListBegin: (TList new elemType: TType struct; size: temp55 size).
            temp55 do: [:temp56|
              [oprot writeStructBegin: (TStruct new name: 'superColumn_t').
                oprot writeFieldBegin: (TField new name: 'name'; type: TType string; id: 1).
                iprot writeString: temp56 name.
                oprot writeFieldEnd.
                oprot writeFieldBegin: (TField new name: 'columns'; type: TType list; id: 2).
                [oprot writeListBegin: (TList new elemType: TType struct; size: temp56 columns size).
                  temp56 columns do: [:temp57|
                    [oprot writeStructBegin: (TStruct new name: 'column_t').
                      oprot writeFieldBegin: (TField new name: 'columnName'; type: TType string; id: 1).
                      iprot writeString: temp57 columnName.
                      oprot writeFieldEnd.
                      oprot writeFieldBegin: (TField new name: 'value'; type: TType string; id: 2).
                      iprot writeString: temp57 value.
                      oprot writeFieldEnd.
                      oprot writeFieldBegin: (TField new name: 'timestamp'; type: TType i32; id: 3).
                      iprot writeI32: temp57 timestamp asInteger.
                      oprot writeFieldEnd.
                      oprot writeFieldStop; writeStructEnd] value
].
                  oprot writeListEnd] value.
                oprot writeFieldEnd.
                oprot writeFieldStop; writeStructEnd] value
].
            oprot writeListEnd] value].
        oprot writeMapEnd] value.
      oprot writeFieldEnd.
      oprot writeFieldStop; writeStructEnd] value.
    oprot writeFieldEnd.
    oprot writeFieldStop; writeStructEnd; writeMessageEnd.
    oprot transport flush! !

!CassandraClient methodsFor: 'as yet uncategorized' stamp: 'thrift 07/15/2008 03:02'!
recvBatch_insert_superColumn_blocking
    | f msg res | 
    msg := oprot readMessageBegin.
    self validateRemoteMessage: msg.
    res := [|temp59 temp58|
      temp58 := TResult new.
      iprot readStructBegin.
      [temp59 := iprot readFieldBegin.
      temp59 type = TType stop] whileFalse: [|temp60|
        temp59 id = 0 ifTrue: [
          temp60 := true.
          temp58 success: iprot readBool].
        temp60 ifNil: [iprot skip: temp59 type]].
      oprot readStructEnd.
      temp58] value.
    oprot readMessageEnd.
    oprot transport flush.
    res exception ifNotNil: [res exception signal].
    ^ res! !

Cassandra enums keysAndValuesDo: [:k :v | Cassandra enums at: k put: v value].!
Cassandra constants keysAndValuesDo: [:k :v | Cassandra constants at: k put: v value].!
